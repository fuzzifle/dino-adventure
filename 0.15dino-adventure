import pygame
pygame.init()
# Window & caption
win = pygame.display.set_mode((500,500))
pygame.display.set_caption("First game")


# Load sprite sheet
charLeft = [pygame.image.load('dinoL1.png'), pygame.image.load('dinoL2.png'), pygame.image.load('dinoL3.png'), pygame.image.load('dinoL4.png')]
charRight = [pygame.image.load('dinop1.png'), pygame.image.load('dinop2.png'), pygame.image.load('dinop3.png'), pygame.image.load('dinop4.png'),]
bg = pygame.image.load('background.png')
char = pygame.image.load('dinop1.png')

# Sprite Width, Height, & scale
sprite_image_width = 24
sprite_image_height = 24
sprite_image_scale = 4

# Tranparency for Sprite
BLACK = (0, 0, 0)

# Create sprite lists


screen_Width = 500
fps = 12


x = 50
y = 400
width = 40
height = 60
vel = 10

clock = pygame.time.Clock()

isJump = False
jumpCount = 10
left = False
right = False
walkcount = 0
stillRight = True
stillLeft = False

def redrawGameWindow():
    global walkCount

    win.blit(bg, (0,0))
    if walkCount + 1 >= 12:
        walkCount = 0
    if left:
        win.blit(walkLeft[walkCount//4], (x,y))
        walkCount += 1
    elif right:
        win.blit(walkRight[walkCount//4], (x,y))
        walkCount += 1
    else:
        if stillLeft:
            win.blit(charLeft, (x,y))
            walkCount = 0
        if stillRight:
            win.blit(charRight, (x,y))
            walkCount = 0
    pygame.display.update()

# Mainloop
run = True
while run:
    clock.tick(fps)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
    
    # side to side / up and down movement
    keys = pygame.key.get_pressed()

    if keys[pygame.K_a] and x > vel:
        x -= vel
        left = True
        Left = False
        stillRight = False
        stillLeft = True
    elif keys[pygame.K_d] and x < screen_Width - width - vel:
        x += vel
        right = True
        left = False
        stillRight = True
        stillLeft = False
    else:
        right = False
        left = False
        walkCount = 0
    # Jumping
    if not(isJump):
        if keys[pygame.K_SPACE]:
            isJump = True 
            right = False
            left = False
            walkCount = 0
    else:
        if jumpCount >= -10:
            neg = 1
            if jumpCount < 0:
                neg = -1
            y -= (jumpCount ** 2) * 0.5 * neg
            jumpCount -= 1          
        else:
            isJump = False
            jumpCount = 10
    

    # Show frame image
    redrawGameWindow()
pygame.quit
